{"remainingRequest":"D:\\Vue_study\\pyac_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue_study\\pyac_project\\src\\views\\post\\Author.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Vue_study\\pyac_project\\src\\views\\post\\Author.vue","mtime":1619423035129},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { follow, hasFollow, unFollow } from '@/api/follow'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  name: 'Author',\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hasFollow: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchInfo()\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'token'\r\n    ])\r\n  },\r\n  methods: {\r\n    fetchInfo() {\r\n      if(this.token != null && this.token !== '')\r\n      {\r\n        hasFollow(this.user.id).then(value => {\r\n          const { data } = value\r\n          this.hasFollow = data.hasFollow\r\n        })\r\n      }\r\n    },\r\n    handleFollow: function(id) {\r\n      if(this.token != null && this.token !== '')\r\n      {\r\n        follow(id).then(response => {\r\n          const { message } = response\r\n          this.$message.success(message)\r\n          this.hasFollow = !this.hasFollow\r\n          this.user.followerCount = parseInt(this.user.followerCount) + 1\r\n        })\r\n      }\r\n      else{\r\n        this.$message.success('ËØ∑ÂÖàÁôªÂΩï')\r\n      }\r\n    },\r\n    handleUnFollow: function(id) {\r\n      unFollow(id).then(response => {\r\n        const { message } = response\r\n        this.$message.success(message)\r\n        this.hasFollow = !this.hasFollow\r\n        this.user.followerCount = parseInt(this.user.followerCount) - 1\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Author.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Author.vue","sourceRoot":"src/views/post","sourcesContent":["<template>\r\n  <section id=\"author\">\r\n    <el-card class=\"\" shadow=\"never\">\r\n      <div slot=\"header\">\r\n        <span class=\"has-text-weight-bold\">üë®‚Äçüíª ÂÖ≥‰∫é‰ΩúËÄÖ</span>\r\n      </div>\r\n      <div class=\"has-text-centered\">\r\n        <p class=\"is-size-5 mb-5\">\r\n          <router-link :to=\"{ path: `/member/${user.username}/home` }\">\r\n            {{ user.alias }} <span class=\"is-size-7 has-text-grey\">{{ '@' + user.username }}</span>\r\n          </router-link>\r\n        </p>\r\n        <div class=\"columns is-mobile\">\r\n          <div class=\"column is-half\">\r\n            <code>{{ user.topicCount }}</code>\r\n            <p>ÊñáÁ´†</p>\r\n          </div>\r\n          <div class=\"column is-half\">\r\n            <code>{{ user.followerCount }}</code>\r\n            <p>Á≤â‰∏ù</p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button\r\n            v-if=\"hasFollow\"\r\n            class=\"button is-success button-center is-fullwidth\"\r\n            @click=\"handleUnFollow(user.id)\"\r\n          >\r\n            Â∑≤ÂÖ≥Ê≥®\r\n          </button>\r\n\r\n          <button v-else class=\"button is-link button-center is-fullwidth\" @click=\"handleFollow(user.id)\">\r\n            ÂÖ≥Ê≥®\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { follow, hasFollow, unFollow } from '@/api/follow'\r\nimport { mapGetters } from 'vuex'\r\nexport default {\r\n  name: 'Author',\r\n  props: {\r\n    user: {\r\n      type: Object,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hasFollow: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchInfo()\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'token'\r\n    ])\r\n  },\r\n  methods: {\r\n    fetchInfo() {\r\n      if(this.token != null && this.token !== '')\r\n      {\r\n        hasFollow(this.user.id).then(value => {\r\n          const { data } = value\r\n          this.hasFollow = data.hasFollow\r\n        })\r\n      }\r\n    },\r\n    handleFollow: function(id) {\r\n      if(this.token != null && this.token !== '')\r\n      {\r\n        follow(id).then(response => {\r\n          const { message } = response\r\n          this.$message.success(message)\r\n          this.hasFollow = !this.hasFollow\r\n          this.user.followerCount = parseInt(this.user.followerCount) + 1\r\n        })\r\n      }\r\n      else{\r\n        this.$message.success('ËØ∑ÂÖàÁôªÂΩï')\r\n      }\r\n    },\r\n    handleUnFollow: function(id) {\r\n      unFollow(id).then(response => {\r\n        const { message } = response\r\n        this.$message.success(message)\r\n        this.hasFollow = !this.hasFollow\r\n        this.user.followerCount = parseInt(this.user.followerCount) - 1\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"]}]}