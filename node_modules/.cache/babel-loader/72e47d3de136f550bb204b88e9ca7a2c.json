{"remainingRequest":"D:\\Vue_study\\pyac_project\\node_modules\\babel-loader\\lib\\index.js!D:\\Vue_study\\pyac_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Vue_study\\pyac_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Vue_study\\pyac_project\\src\\components\\Comment\\Comments.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Vue_study\\pyac_project\\src\\components\\Comment\\Comments.vue","mtime":1619435210316},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Vue_study\\pyac_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:/Vue_study/pyac_project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"D:/Vue_study/pyac_project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { fetchCommentsByTopicId } from '@/api/comment';\nimport LvCommentsItem from \"./CommentsItem\";\nimport LvCommentsForm from \"./CommentsForm\";\nexport default {\n  name: 'LvComments',\n  components: {\n    LvCommentsForm: LvCommentsForm,\n    LvCommentsItem: LvCommentsItem\n  },\n  data: function data() {\n    return {\n      comments: []\n    };\n  },\n  props: {\n    slug: {\n      type: String,\n      default: null\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['token'])),\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.fetchComments(this.slug);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    // 初始化\n    fetchComments: function () {\n      var _fetchComments = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(topic_id) {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(topic_id);\n                fetchCommentsByTopicId(topic_id).then(function (response) {\n                  var data = response.data;\n                  _this.comments = data;\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function fetchComments(_x) {\n        return _fetchComments.apply(this, arguments);\n      }\n\n      return fetchComments;\n    }()\n  }\n};",{"version":3,"sources":["Comments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAeA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,sBAAA,QAAA,eAAA;AACA,OAAA,cAAA;AACA,OAAA,cAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,cAAA,EAAA;AAFA,GAFA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAVA;AAWA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAXA;AAiBA,EAAA,QAAA,oBACA,UAAA,CAAA,CACA,OADA,CAAA,CADA,CAjBA;AAsBA,EAAA,OAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAuBA,KAAA,aAAA,CAAA,KAAA,IAAA,CAvBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyBA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA;AAAA,qGAEA,QAFA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGA,gBAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,gBAAA,sBAAA,CAAA,QAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,sBAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,IAAA;AACA,iBAHA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAzBA,CAAA","sourcesContent":["<template>\r\n  <section class=\"box comments\">\r\n    <hr />\r\n    <h3 class=\"title is-5\">Comments</h3>\r\n    <lv-comments-form :slug=\"slug\" v-if=\"token\" @loadComments=\"fetchComments\"/>\r\n\r\n    <lv-comments-item\r\n      v-for=\"comment in comments\"\r\n      :key=\"`comment-${comment.id}`\"\r\n      :comment=\"comment\"\r\n    />\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { fetchCommentsByTopicId } from '@/api/comment'\r\nimport LvCommentsItem from './CommentsItem'\r\nimport LvCommentsForm from './CommentsForm'\r\nexport default {\r\n  name: 'LvComments',\r\n  components: {\r\n    LvCommentsForm,\r\n    LvCommentsItem\r\n  },\r\n  data() {\r\n    return {\r\n      comments: []\r\n    }\r\n  },\r\n  props: {\r\n    slug: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'token'\r\n    ])\r\n  },\r\n  async mounted() {\r\n    await this.fetchComments(this.slug)\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    async fetchComments(topic_id) {\r\n      console.log(topic_id)\r\n      fetchCommentsByTopicId(topic_id).then(response => {\r\n        const { data } = response\r\n        this.comments = data\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"],"sourceRoot":"src/components/Comment"}]}